---
import { siteConfig } from '~/config/site.config';

const ZAPIER_WEBHOOK = 'https://hooks.zapier.com/hooks/catch/20686036/25qrkto/';
---

<div id="modal" class="fixed inset-0 z-50 hidden">
  <!-- Overlay de fondo oscuro -->
  <div class="fixed inset-0 bg-black bg-opacity-50 transition-opacity" id="modal-overlay"></div>

  <!-- Modal -->
  <div class="fixed inset-0 z-50 flex items-center justify-center p-4">
    <!-- <div class="relative w-full max-w-md rounded-lg bg-black p-6 shadow-xl"> -->
    <div
      class="relative w-full max-w-md rounded-lg border-2 border-transparent bg-black bg-gradient-to-r from-pink-500/20 to-purple-600/20 p-6 shadow-xl [background-clip:padding-box] before:absolute before:inset-0 before:-z-10 before:rounded-lg before:bg-gradient-to-r before:from-pink-500 before:to-purple-600 before:p-[2px]"
    >
      <!-- Botón de cerrar -->
      <button
        type="button"
        class="absolute right-2 top-2 text-gray-400 hover:text-white"
        id="close-modal"
      >
        <svg
          class="h-6 w-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>

      <!-- Contenido del modal -->
      <div class="mt-3 text-center sm:mt-0 sm:text-left">
        <h3 class="gradient-text font-medium leading-6 text-lg">{siteConfig.ui.formTitle}</h3>
        <div class="mt-4">
          <form id="registration-form" action="#" class="space-y-4">
            <div>
              <label for="name" class="gradient-text block font-medium text-sm"
                >{siteConfig.ui.formLabels.name}</label
              >
              <input
                type="text"
                name="name"
                id="name"
                required
                class="mt-1 block w-full rounded-md border border-gray-600 bg-gray-900 px-3 py-2 text-white shadow-sm focus:border-purple-500 focus:outline-none focus:ring-purple-500"
                placeholder={siteConfig.ui.placeholders.name}
              />
            </div>
            <div>
              <label for="email" class="gradient-text block font-medium text-sm"
                >{siteConfig.ui.formLabels.email}</label
              >
              <input
                type="email"
                name="email"
                id="email"
                required
                class="mt-1 block w-full rounded-md border border-gray-600 bg-gray-900 px-3 py-2 text-white shadow-sm focus:border-purple-500 focus:outline-none focus:ring-purple-500"
                placeholder={siteConfig.ui.placeholders.email}
              />
            </div>
            <div class="mt-6">
              <button
                type="submit"
                class="mt-5 w-4/5 justify-center rounded-full bg-gradient-to-r from-pink-500 to-purple-600 px-3.5 py-2.5 text-center font-semibold text-white shadow-sm transition-all text-sm hover:border-white/40 hover:from-pink-600 hover:to-purple-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
              >
                {siteConfig.ui.formLabels.submit}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script define:vars={{ ZAPIER_WEBHOOK }}>
  if (!window.registrationFormScriptLoaded) {
    window.registrationFormScriptLoaded = true;
    // Obtener elementos del DOM
    const modal = document.getElementById('modal');
    const closeButton = document.getElementById('close-modal');
    const modalOverlay = document.getElementById('modal-overlay');
    const form = document.getElementById('registration-form');

    // Función para abrir el modal
    window.openModal = function () {
      modal?.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    };

    // Función para cerrar el modal
    function closeModal() {
      modal?.classList.add('hidden');
      document.body.style.overflow = '';
    }

    closeButton?.addEventListener('click', closeModal);
    modalOverlay?.addEventListener('click', closeModal);

    // Función para mostrar mensaje de carga
    function showLoading() {
      const submitButton = form?.querySelector('button[type="submit"]');
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.innerHTML = 'Enviando...';
      }
    }

    // Función para ocultar mensaje de carga
    function hideLoading() {
      const submitButton = form?.querySelector('button[type="submit"]');
      if (submitButton) {
        submitButton.disabled = false;
        submitButton.innerHTML = 'Unirme al Grupo';
      }
    }

    // Manejar el envío del formulario
    form?.addEventListener('submit', async (e) => {
      fbq('track', 'Lead');
      e.preventDefault();
      showLoading();

      const formData = new FormData(e.target);
      const data = {
        name: formData.get('name'),
        email: formData.get('email'),
        timestamp: new Date().toISOString()
      };

      try {
        // console.log('entro');
        const response = await fetch('/api/register.json', {
          method: 'POST',
          body: JSON.stringify(data),
          headers: {
            'Content-Type': 'application/json'
          }
        });

        if (!response.ok) {
          throw new Error('Error al enviar el formulario');
        }

        window.open('https://chat.whatsapp.com/HgnvveWfduzKfNepLLxB01', '_blank');
        closeModal();
        //   alert('¡Registro exitoso! Redirigiendo al grupo de WhatsApp...');
        form.reset();
      } catch (error) {
        console.error('Error:', error);
        alert('Hubo un error al procesar tu registro. Por favor, intenta nuevamente.');
      } finally {
        hideLoading();
      }
    });
  }
</script>
